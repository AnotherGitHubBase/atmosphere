###########################
## This is a 'mod_macro' configuration. NONE of the information inside the
#macro should be changed to enable Atmosphere on apache. Simply scroll to the
#bottom of the page and add the one line corresponding to your specific
#hostname and atmosphere/troposphere path
#
# If you do not have 'mod_macro' installed for apache:
# apt-get install libapache2-mod-macro
##

<Macro Atmosphere $MYSHORTNAME $MYHOSTNAMEHERE $PATH_TO_ATMOSPHERE $PATH_TO_TROPOSPHERE $BASECERTHERE $KEYHERE $BUNDLECERTHERE>
    ### KEEP THIS LINE HERE!
    ### Avoids the Proxy 502 Errors
    ### REF:
    ### http://serverfault.com/questions/185894/proxy-error-502-reason-error-reading-from-remote-server-with-apache-2-2-3-de
    SetEnv proxy-initial-not-pooled 1
    SetEnv proxy-nokeepalive 0

    ###
    ## Uncomment these lines to enable '/server-status'
    ## This can be useful for debugging Apache + MOD_WSGI
    ###
    <Location /server-status>
        SetHandler server-status
        AuthType CAS
        AuthName "CAS"
        CASScope /
        Require valid-user
        Require all granted
        Require host 127.0.0.1
        Satisfy any
    </Location>
    ExtendedStatus On

    ###############################################################################
    ## HTTP Virtual Host Context (Forwards requests to HTTPS @ MYHOSTNAMEHERE)
    ###############################################################################
    <VirtualHost *:80>
        ErrorLog ${APACHE_LOG_DIR}/error.log
        LogLevel warn
        CustomLog ${APACHE_LOG_DIR}/access.log combined

        <Location /init_files>
            Require all granted
        </Location>
        Alias /init_files $PATH_TO_ATMOPSHERE/init_files

        RewriteEngine On
        RewriteCond %{HTTPS} !=on
        RewriteCond %{REQUEST_URI} !^/init_files
        RewriteRule ^/?(.*) https://$MYHOSTNAMEHERE/$1 [R,L]
    </VirtualHost>

    ###############################################################################
    ## SSL Configuration
    ###############################################################################
    SSLCryptoDevice builtin

    ###############################################################################
    ## Atmosphere Server Virtualhost (Port 443)
    ###############################################################################
    <VirtualHost *:443>
        # Rewrite
        Options FollowSymLinks MultiViews
        RewriteEngine On
        RewriteCond %{HTTP:Authorization} ^(.*)
        RewriteRule .* - [e=HTTP_AUTHORIZATION:%1]
        # NOTE: The lines below are NOT suitable for sites whose hostnames end
        # in .iplantcollaborative.org. In these cases, Comment the next two lines.
        # -Steve
        # Redirects .iplantcollaborative --> .iplantc
        RewriteCond %{HTTP_HOST} ^$MYSHORTNAME.iplantcollaborative.org$
        RewriteRule ^/(.*)$       https://$MYHOSTNAMEHERE/$1 [R,L]

        # SSL Settings
        SSLEngine on
        SSLProtocol all -SSLv2
        SSLCipherSuite ALL:!ADH:!EXPORT:!SSLv2:RC4+RSA:+HIGH:+MEDIUM:+LOW
        SSLCertificateFile /etc/ssl/certs/$BASECERTHERE
        SSLCertificateKeyFile /etc/ssl/private/$KEYHERE
        SSLCertificateChainFile /etc/ssl/certs/$BUNDLECERTHERE

        <Files ~ "\.(cgi|shtml|phtml|php3?)$">
            SSLOptions +StdEnvVars
        </Files>
        <Directory "/var/www/cgi-bin">
            SSLOptions +StdEnvVars
        </Directory>

        SetEnvIf User-Agent ".*MSIE.*" \
                 nokeepalive ssl-unclean-shutdown \
                 downgrade-1.0 force-response-1.0
        ###############################################################################
        ## Celery-Flower proxy redirection
        ###############################################################################
        ProxyRequests Off
        ProxyPreserveHost On
        SSLProxyEngine On
        AllowEncodedSlashes NoDecode

        ProxyPass         /flower  https://$MYHOSTNAMEHERE:8443
        ProxyPassReverse  /flower  https://$MYHOSTNAMEHERE:8443
        ProxyPassReverse  /flower  https://$MYHOSTNAMEHERE/flower

        <Proxy https://$MYHOSTNAMEHERE:8443/flower*>
            Require all granted
        </Proxy>

        ###############################################################################
        ## Jenkins proxy redirection
        ###############################################################################
        <Proxy /jenkins*>
            Require all granted
        </Proxy>
        
        ProxyPass         /jenkins  http://127.0.0.1:8080/jenkins nocanon
        ProxyPassReverse  /jenkins  http://127.0.0.1:8080/jenkins
        ProxyPassReverse  /jenkins  https://$MYHOSTNAMEHERE/jenkins
        RequestHeader set X-Forwarded-Proto "https"
        RequestHeader set X-Forwarded-Port "443"

        ###############################################################################
        ## Atmosphere Server VirtualHost (Port 443)
        ###############################################################################

        SetEnv DJANGO_SETTINGS_MODULE atmosphere.settings

        # Logging
        ErrorLog /var/log/apache2/ssl_error.log
        TransferLog /var/log/apache2/ssl_access.log
        LogLevel debug

        # Catch static file paths
        # favicon and robots are better served outside of WSGI
        Alias /favicon.ico $PATH_TO_ATMOSPHERE/static/images/favicon.ico
        Alias /robots.txt $PATH_TO_ATMOSPHERE/templates/robots.txt
        #init_files && resources will auto-direct to the file
        Alias /init_files $PATH_TO_ATMOSPHERE/init_files
        Alias /resources $PATH_TO_ATMOSPHERE/resources

        # Shell
        <Location /shell>
            AuthType CAS
            AuthName "CAS"
            require valid-user
            CASScope /
            Require all granted
            SetHandler None
        </Location>

        # Alias static files for Atmosphere.
        Alias /static/rest_framework $PATH_TO_ATMOSPHERE/static/rest_framework
        Alias /static $PATH_TO_ATMOSPHERE/static

        # Alias static files to Troposphere.
        ProxyPass /assets http://127.0.0.1:5000/assets
        ProxyPassReverse /assets http://127.0.0.1:5000/assets

        # Proxy to troposphere's VirtualHost.
        ProxyPass /application http://127.0.0.1:5000/application
        ProxyPassReverse /application http://127.0.0.1:5000/application
        ProxyPass /maintenance http://127.0.0.1:5000/maintenance
        ProxyPassReverse /maintenance http://127.0.0.1:5000/maintenance
        ProxyPass /login http://127.0.0.1:5000/login
        ProxyPassReverse /login http://127.0.0.1:5000/login
        ProxyPass /logout http://127.0.0.1:5000/logout
        ProxyPassReverse /logout http://127.0.0.1:5000/logout
        ProxyPass /cas/oauth2.0 http://127.0.0.1:5000/cas/oauth2.0
        ProxyPassReverse /cas/oauth2.0 http://127.0.0.1:5000/cas/oauth2.0
        ProxyPass /cas/service http://127.0.0.1:5000/cas/service
        ProxyPassReverse /cas/service http://127.0.0.1:5000/cas/service
        ProxyPass /forbidden http://127.0.0.1:5000/forbidden
        ProxyPassReverse /forbidden http://127.0.0.1:5000/forbidden
        ProxyPass /version http://127.0.0.1:5000/version
        ProxyPassReverse /version http://127.0.0.1:5000/version
        ProxyPass /cf2 http://127.0.0.1:5000/cf2
        ProxyPassReverse /cf2 http://127.0.0.1:5000/cf2

        ProxyPass / uwsgi://127.0.0.1:5001/
        ProxyPassReverse / uwsgi://127.0.0.1:5001/

        <Location />
            Require all granted
        </Location>

    </VirtualHost>

    ###############################################################################
    ## Troposphere Server Virtualhost (Port 5000)
    ###############################################################################
    Listen 5000
    <VirtualHost *:5000>
        # Set up alias for static files.
        ProxyPass /assets !
        Alias /assets $PATH_TO_TROPOSPHERE/troposphere/assets

        # Logging
        ErrorLog /var/log/apache2/ssl_error.log
        TransferLog /var/log/apache2/ssl_access.log
        LogLevel debug

        # Pass to uwsgi.
        ProxyPass / uwsgi://127.0.0.1:5002/
        ProxyPassReverse / uwsgi://127.0.0.1:5002/

        # Grant access
        <Location /assets>
            Require all granted
        </Location>
    </VirtualHost>
</Macro>
##Add your line below, it should look something like this:
##Use Atmosphere vm.iplantc[ollaborative].org /opt/dev/atmosphere /opt/dev/troposphere [name_of_ssl_cert.crt] [name_of_ssl_key.key] [name_of_ssl_bundle.crt]

