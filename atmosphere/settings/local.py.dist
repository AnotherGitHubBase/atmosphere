import sys

globals().update(vars(sys.modules['atmosphere.settings']))

#Debug Mode
DEBUG = True
TEMPLATE_DEBUG = DEBUG

#Enforcing mode -- True, when in production (Debug=False)
#ENFORCING = not DEBUG

ATMO_SUPPORT = (
    ("Atmosphere Support", "atmo-rt@iplantcollaborative.org"),
)

PROJECT_ROOT = os.path.abspath(
    os.path.join(
        os.path.dirname(__file__), "../.."))


#Local settings for celery
#How to setup a 'RabbitMQ' Broker (Stable, Production-Recommended):
BROKER_URL = 'amqp://username:password@localhost:5672/virutalhost_name'
#How to setup a 'Redis' Broker (Stable, Fast, Development-Recommended)
#BROKER_URL = 'redis://localhost:6379/0'
#How to setup a 'MongoDB' Broker (Experimental)
#BROKER_URL = "mongodb://userid:password@hostname:port/database_name"
TEST_RUNNER='atmosphere.test_runner.CeleryDiscoverTestSuiteRunner'
TEST_RUNNER_USER=''
TEST_RUNNER_PASS=''

SERVER_URL = "SERVERNAMEHERE"

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql_psycopg2",
        "NAME": "",
        "USER": "",
        "PASSWORD": "",
        "HOST": "",
        "PORT": ""
    },
}

# Must reassign anything using SERVER_URL.

# Prevents warnings
ALLOWED_HOSTS = [SERVER_URL.replace("https://","")]

#Atmosphere Keypair/Deployment Configs
ATMOSPHERE_PRIVATE_KEYFILE=os.path.join(PROJECT_ROOT, "extras/ssh/id_rsa")
ATMOSPHERE_KEYPAIR_FILE=os.path.join(PROJECT_ROOT, "path/to/keypair.pub")
ATMOSPHERE_KEYPAIR_NAME=""

# Atmosphere App Configs
INSTANCE_SERVICE_URL = SERVER_URL + REDIRECT_URL + "/api/v1/notification/"
API_SERVER_URL = SERVER_URL + REDIRECT_URL + "/resources/v1"
AUTH_SERVER_URL = SERVER_URL + REDIRECT_URL + "/auth"
DEPLOY_SERVER_URL = SERVER_URL.replace("https:", "http:")

# CASLIB
OAUTH_CLIENT_KEY = "OauthClientKey"
OAUTH_CLIENT_SECRET = "OauthClientSecret"
OAUTH_CLIENT_CALLBACK = SERVER_URL + "/oauth2.0/callbackAuthorize"
SELF_SIGNED_CERT = False
SERVER_URL = SERVER_URL+REDIRECT_URL
CAS_SERVER = ""
CAS_AUTH_PREFIX = "/cas4test"
SERVICE_URL = SERVER_URL+"/CAS_serviceValidater?sendback="+REDIRECT_URL+"/application/"
PROXY_URL = SERVER_URL+"/CAS_proxyUrl"
PROXY_CALLBACK_URL = SERVER_URL+"/CAS_proxyCallback"
caslib.cas_init(CAS_SERVER, SERVICE_URL, PROXY_URL, PROXY_CALLBACK_URL, SELF_SIGNED_CERT)

#Looking to do Localhost development? These settings come in handy:
# AUTHENTICATION_BACKENDS = (
#     #  For Always-OK Access
#     'authentication.authBackends.MockLoginBackend',
# ) + AUTHENTICATION_BACKENDS
# INSTALLED_APPS += (
#     "sslserver",
# )
# NOTE: This user will be authenticated indefinitely while active, Should only be activated for
# development on a localhost.
# ALWAYS_AUTH_USER = "test_user"
